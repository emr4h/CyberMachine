import numpy as np
import pandas as pd
from sklearn import tree
from sklearn.ensemble import RandomForestClassifier
from sklearn.neighbors import KNeighborsClassifier


def machineLearnMalware() :

    dataSet = pd.read_csv('../CyberMachine/MalwareArtifacts.csv')
    fileData = pd.read_csv('../CyberMachine/inputData.csv')

    features = dataSet.iloc[:,[0,1,2,3,4,5,6,7]].values
    ifMalware = dataSet.iloc[:,8].values

    fileFeatures = fileData.iloc[:,[0,1,2,3,4,5,6,7]].values

    print("The model is training using a total of 137444 data ...\n")
    print("Prediction using Decision Trees ...\n")

    dtModel = tree.DecisionTreeClassifier() # DecisionTree Sınıflandırması oluşturduk.
    dtModel.fit(features, ifMalware) # Algoritmamıza eğitim verilerini öğrenmesi için verdik.

    dtpredict = dtModel.predict(fileFeatures) # girilen exe'yi vererek tahmin etmesini istedik.
    print(dtpredict)
    print("\n")

    print("Prediction using Random Forest ...\n")

    rfModel = RandomForestClassifier() # Random Forest çağrımı
    rfModel.fit(features, ifMalware) # fit ile algoritmayı eğitim değişkenlerimizle eğittik.
    rfpredict = rfModel.predict(fileFeatures) # predict'e verdiğimiz test değişkenimizle tahmin gerçekleştirmesini istedik. 
    print(rfpredict)
    print("\n")


    print("Prediction using Kneighbors ...\n")

    knnModel = KNeighborsClassifier(n_neighbors=1)
    knnModel.fit(features, ifMalware)
    knpredict = knnModel.predict(fileFeatures) # predict'e verdiğimiz test değişkenimizle tahmin gerçekleştirmesini istedik. 
    print(knpredict)
    print("\n")

    predict = int(knpredict + dtpredict + rfpredict)
    return predict

